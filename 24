'''Текстовый файл состоит не более чем из 10**6 символов X, Y и Z. Определите максимальное количество идущих подряд 
символов, среди которых каждые два соседних различны.

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать 
с помощью данного алгоритма.
c = 1

   i
XXYYXYXX

YXYX

c = 3

[3]
'''
f = open('24.txt').readline()
c = 1
c1 =[]
for i in range(len(f)-1):
    x1 = str(f[i])
    x2 = str(f[i+1])
    if x1 != x2:
        c = c+1
        c1.append(c)
    if x1 == x2:
        c = 1
print(max(c1))


'''Текстовый файл состоит не более чем из 10**6 символов X, Y и Z. Определите длину самой длинной последовательности, 
состоящей из символов X. Хотя бы один символ X находится в последовательности.

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать 
с помощью данного алгоритма.
c = 1
   i
XYXXXXYXYXX

c = 3
XXXX
'''
f = open('24.txt').readline()
c = 0
c1 =[]
for i in range(len(f)-1):
    x1 = str(f[i])
    x2 = str(f[i+1])
    if x1 == 'X':
        c = c+1
        c1.append(c)
    if x1 != 'X' :
        c = 0
print(max(c1))

    
'''Текстовый файл состоит не более чем из 10**6 символов A, B и C. Определите максимальную длину цепочки вида 
ABABAB... (составленной из фрагментов AB, последний фрагмент может быть неполным).

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать 
с помощью данного алгоритма.
c = 1
    i
CCCBABABCCC

ABAB
'''
f = open('24.txt').readline()
c = 1
c1 =[]
for i in range(len(f)-1):
    x1 = str(f[i])
    x2 = str(f[i+1])
    if c == 1 and x1 == 'B':
        c = 1  
    elif (x1 == 'A' and x2 == 'B') or (x1 == 'B' and x2 == 'A'):
        c = c+1
        c1.append(c)
    else:
        c = 1
print(max(c1))

    

'''Текстовый файл состоит не более чем из 10**6 символов A, B и C. Определите максимальную длину цепочки вида 
ABABAB... (составленной из фрагментов AB, последний фрагмент может быть неполным).

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать 
с помощью данного алгоритма.
c = 1
     i
CCC**ACCC

ABAB
'''
f = open('24.txt').readline()
c = 0
c1 =[]

f = f.replace('AB', '*')

for i in range(len(f)):
    x1 = str(f[i])
    if x1 == '*':
        c = c + 2
        c1.append(c)
    else:
        if x1 == 'A':
            c = c + 1
        c1.append(c)
        c = 0
print(max(c1))


'''Текстовый файл состоит из символов A, C, D, F и O.

Определите максимальное количество идущих подряд пар символов вида:

согласная + гласная.

Для выполнения этого задания следует написать программу.
c = 6
      i
CCCAAFOFCCAC

CAFO

Ответ: 95.
'''
f = open('24.txt').readline()
c = 0
c1 = []
gl = 'AO'
sog ='CDF'
i = 0
while i < (len(f)-1):
    x1 = str(f[i])
    x2 = str(f[i+1])
    if ((x1 in sog) and (x2 in gl)):
        i = i+2
        c = c + 2
        c1.append(c)
    else:
        c = 0 
        i =i+1   
otvet = int(max(c1)/2)
print(otvet)




'''Текстовый файл содержит строки различной длины, содержащие только заглавные буквы латинского алфавита (ABC…Z). 
В каждой строке файла определяется буква, которая чаще всего стоит сразу после буквы A, эта буква заносится в отдельный список. 
Если несколько разных букв встречаются в строке сразу после A одинаковое максимальное количество раз, в список заносятся все эти буквы. 
Определите, сколько раз встретится в этом списке самая частая в нём буква.

Пример.

Пусть файл содержит такие строки:

ABBAAABBABBXY
XYAYYXYABA

Здесь в первой строке сразу после A три раза стоит B и два раза A. Чаще других стоит B, эта буква попадает в отдельный список.

Во второй строке после A по одному разу стоят буквы Y и B, обе эти буквы попадают в список.

В итоге буква B попадает в список два раза, буква Y  — один раз. Чаще других в списке встречается буква B  — два раза. 
В ответе для этого примера надо записать число 2.

    
['asdasf', 'asdfdssdf']

i ='asdasf'

[B, B, A, F, F, F]

c = 0

if count() > c:
    c = count()
    bukv = i
'''

f = open('24.txt').readlines()
alph = 'QWERTYUIOPASDFGHJKLZXCVBNM'
sm= []
p = 0
for i in f:
    s = []
    c = 0
    for i1 in range(len(i)-1):
        x = str(i[i1])
        if x == 'A':
            s.append(i[i1+1])
    for h in alph:
        if s.count(h) > c:
            c = s.count(h)
            bukva = h
    sm.append(bukva)


for a in alph:
    if sm.count(a) > p:
        p = sm.count(a)


print(p)  


'''Текстовый файл состоит из символов T, U, V, W, X, Y и Z.

Определите в прилагаемом файле максимальное количество идущих подряд символов (длину непрерывной подпоследовательности), 
среди которых символ Y встречается не более 150 раз.

Для выполнения этого задания следует написать программу. 


01234567890123456
YAAAAYAAAAYAAAAYY


[0, 5, 10, 15, 16]

15 - 0 - 1 = 14
16 - 5 - 1 = 10
'''

f = open('24.txt').readline()
iy = []
for i in range(len(f)):
    x = f[i]
    if x == 'Y':
        iy.append(i)
h = []
for i in range(len(iy)-151):
    x1 = int(iy[i])
    x2 = int(iy[i+151])
    k = x2 - x1 -1
    h.append(k)
print(max(h))
    


'''Текстовый файл состоит не более чем из 10**6 символов латинского алфавита. Определите минимальную подстроку, 
содержащую 100 символов T. Для выполнения этого задания следует написать программу.


01234567890123456
YAAAAYAAAAYAAAAYY


[0, 5, 10, 15, 16]

YAAAAY

5 - 0 + 1
'''

f = open('24.txt').readline()
iy = []
for i in range(len(f)):
    x = f[i]
    if x == 'T':
        iy.append(i)
h = []
for i in range(len(iy)-99):
    x1 = int(iy[i])
    x2 = int(iy[i+99])
    k = x2 - x1 +1
    h.append(k)
print(min(h))
    

        


'''Текстовый файл состоит из символов, обозначающих заглавные буквы латинского алфавита. 
Определите минимальное количество идущих подряд символов, среди которых пара символов T встречается ровно 150 раз.

Пример. В строке TTTT пара символов встречается ровно 3 раза. 


01234567890123456789
YYAAAAYYAAAAYYAAAAYY


[0, 6, 12, 18]

YYAAAAYY

5 - 0 + 2
'''

f = open('24.txt').readline()
iy = []
c = 1
para = 0
for i in range(len(f)-1):
    x = f[i]

    if x == f[i+1] =='T':
        iy.append(i)
        
h = []
for i in range(len(iy)-149):
    x1 = int(iy[i])
    x2 = int(iy[i+149])
    k = x2 - x1 +2
    h.append(k)
print(min(h)) 




'''
Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите максимальное количество идущих подряд символов, 
среди которых ровно по одному разу встречаются буквы A и B.

01234567890123456789
ACCCCBCCCCACCCCBCCCB

CCCCBCCCCACCCC

              i
[[0, 'A'], [5, 'B'], [10, 'A'], [15, 'B'], [19, 'B']]


[0, 'A']    [5, 'B']        10 - 0

[5, 'B'], [10, 'A']             [i+2] - [i-1] - 1    
'''

f = open('24.txt').readline()
ia = []
c = 1
para = 0
for i in range(len(f)):
    x = f[i]
    if x == 'A' or x =='B':
        ia.append([i,x])

p = []
for i in range(1, len(ia)-2):
    if ia[i][1] != ia[i+1][1]:
        p.append(ia[i+2][0] - ia[i-1][0]-1)
print(max(p))